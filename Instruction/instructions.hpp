#pragma once

#include "../JVM/jvm.hpp"
#include <math.h>
#include <iostream>
#include <iomanip> // std::setprecision
#include <cstring>

class JVM;

typedef vector <void(*)(Frame *, JVM *)> InstructionsMap;

void loadInstructions(InstructionsMap *);

void notSupported();

void nop (Frame *, JVM *);
void aconst_null (Frame *, JVM *);
void iconst_m1 (Frame *, JVM *);
void iconst_0 (Frame *, JVM *);
void iconst_1 (Frame *, JVM *);
void iconst_2 (Frame *, JVM *);
void iconst_3 (Frame *, JVM *);
void iconst_4 (Frame *, JVM *);
void iconst_5 (Frame *, JVM *);
void lconst_0 (Frame *, JVM *);
void lconst_1 (Frame *, JVM *);
void fconst_0 (Frame *, JVM *);
void fconst_1 (Frame *, JVM *);
void fconst_2 (Frame *, JVM *);
void dconst_0 (Frame *, JVM *);
void dconst_1 (Frame *, JVM *);
void bipush (Frame *, JVM *);
void sipush (Frame *, JVM *);
void ldc (Frame *, JVM *);
void ldc_w (Frame *, JVM *);
void ldc2_w (Frame *, JVM *);
void iload (Frame *, JVM *);
void lload (Frame *, JVM *);
void fload (Frame *, JVM *);
void dload (Frame *, JVM *);
void aload (Frame *, JVM *);
void iload_0 (Frame *, JVM *);
void iload_1 (Frame *, JVM *);
void iload_2 (Frame *, JVM *);
void iload_3 (Frame *, JVM *);
void lload_0 (Frame *, JVM *);
void lload_1 (Frame *, JVM *);
void lload_2 (Frame *, JVM *);
void lload_3 (Frame *, JVM *);
void fload_0 (Frame *, JVM *);
void fload_1 (Frame *, JVM *);
void fload_2 (Frame *, JVM *);
void fload_3 (Frame *, JVM *);
void dload_0 (Frame *, JVM *);
void dload_1 (Frame *, JVM *);
void dload_2 (Frame *, JVM *);
void dload_3 (Frame *, JVM *);
void aload_0 (Frame *, JVM *);
void aload_1 (Frame *, JVM *);
void aload_2 (Frame *, JVM *);
void aload_3 (Frame *, JVM *);
void iaload (Frame *, JVM *);
void laload (Frame *, JVM *);
void faload (Frame *, JVM *);
void daload (Frame *, JVM *);
void aaload (Frame *, JVM *);
void baload (Frame *, JVM *);
void caload (Frame *, JVM *);
void saload (Frame *, JVM *);
void istore (Frame *, JVM *);
void lstore (Frame *, JVM *);
void fstore (Frame *, JVM *);
void dstore (Frame *, JVM *);
void astore (Frame *, JVM *);
void istore_0 (Frame *, JVM *);
void istore_1 (Frame *, JVM *);
void istore_2 (Frame *, JVM *);
void istore_3 (Frame *, JVM *);
void lstore_0 (Frame *, JVM *);
void lstore_1 (Frame *, JVM *);
void lstore_2 (Frame *, JVM *);
void lstore_3 (Frame *, JVM *);
void fstore_0 (Frame *, JVM *);
void fstore_1 (Frame *, JVM *);
void fstore_2 (Frame *, JVM *);
void fstore_3 (Frame *, JVM *);
void dstore_0 (Frame *, JVM *);
void dstore_1 (Frame *, JVM *);
void dstore_2 (Frame *, JVM *);
void dstore_3 (Frame *, JVM *);
void astore_0 (Frame *, JVM *);
void astore_1 (Frame *, JVM *);
void astore_2 (Frame *, JVM *);
void astore_3 (Frame *, JVM *);
void iastore (Frame *, JVM *);
void lastore (Frame *, JVM *);
void fastore (Frame *, JVM *);
void dastore (Frame *, JVM *);
void aastore (Frame *, JVM *);
void bastore (Frame *, JVM *);
void castore (Frame *, JVM *);
void sastore (Frame *, JVM *);
void pop (Frame *, JVM *);
void pop2 (Frame *, JVM *);
void dup (Frame *, JVM *);
void dup_x1 (Frame *, JVM *);
void dup_x2 (Frame *, JVM *);
void dup2 (Frame *, JVM *);
void dup2_x1 (Frame *, JVM *);
void dup2_x2 (Frame *, JVM *);
void swap (Frame *, JVM *);
void iadd (Frame *, JVM *);
void ladd (Frame *, JVM *);
void fadd (Frame *, JVM *);
void dadd (Frame *, JVM *);
void isub (Frame *, JVM *);
void lsub (Frame *, JVM *);
void fsub (Frame *, JVM *);
void dsub (Frame *, JVM *);
void imul (Frame *, JVM *);
void lmul (Frame *, JVM *);
void fmul (Frame *, JVM *);
void dmul (Frame *, JVM *);
void idiv (Frame *, JVM *);
void ldiv (Frame *, JVM *);
void fdiv (Frame *, JVM *);
void ddiv (Frame *, JVM *);
void irem (Frame *, JVM *);
void lrem (Frame *, JVM *);
void frem (Frame *, JVM *);
void drem (Frame *, JVM *);
void ineg (Frame *, JVM *);
void lneg (Frame *, JVM *);
void fneg (Frame *, JVM *);
void dneg (Frame *, JVM *);
void ishl (Frame *, JVM *);
void lshl (Frame *, JVM *);
void ishr (Frame *, JVM *);
void lshr (Frame *, JVM *);
void iushr (Frame *, JVM *);
void lushr (Frame *, JVM *);
void iand (Frame *, JVM *);
void land (Frame *, JVM *);
void ior (Frame *, JVM *);
void lor (Frame *, JVM *);
void ixor (Frame *, JVM *);
void lxor (Frame *, JVM *);
void iinc (Frame *, JVM *);
void i2l (Frame *, JVM *);
void i2f (Frame *, JVM *);
void i2d (Frame *, JVM *);
void l2i (Frame *, JVM *);
void l2f (Frame *, JVM *);
void l2d (Frame *, JVM *);
void f2i (Frame *, JVM *);
void f2l (Frame *, JVM *);
void f2d (Frame *, JVM *);
void d2i (Frame *, JVM *);
void d2l (Frame *, JVM *);
void d2f (Frame *, JVM *);
void i2b (Frame *, JVM *);
void i2c (Frame *, JVM *);
void i2s (Frame *, JVM *);
void lcmp (Frame *, JVM *);
void fcmpl (Frame *, JVM *);
void fcmpg (Frame *, JVM *);
void dcmpl (Frame *, JVM *);
void dcmpg (Frame *, JVM *);
void ifeq (Frame *, JVM *);
void ifne (Frame *, JVM *);
void iflt (Frame *, JVM *);
void ifge (Frame *, JVM *);
void ifgt (Frame *, JVM *);
void ifle (Frame *, JVM *);
void if_icmpeq (Frame *, JVM *);
void if_icmpne (Frame *, JVM *);
void if_icmplt (Frame *, JVM *);
void if_icmpge (Frame *, JVM *);
void if_icmpgt (Frame *, JVM *);
void if_icmple (Frame *, JVM *);
void if_acmpeq (Frame *, JVM *);
void if_acmpne (Frame *, JVM *);
void _goto (Frame *, JVM *);
void jsr (Frame *, JVM *);
void ret (Frame *, JVM *);
void tableswitch (Frame *, JVM *);
void lookupswitch (Frame *, JVM *);
void ireturn (Frame *, JVM *);
void lreturn (Frame *, JVM *);
void freturn (Frame *, JVM *);
void dreturn (Frame *, JVM *);
void areturn (Frame *, JVM *);
void _return (Frame *, JVM *);
void getstatic (Frame *, JVM *);
void putstatic (Frame *, JVM *);
void getfield (Frame *, JVM *);
void putfield (Frame *, JVM *);
void invokevirtual (Frame *, JVM *);
void invokespecial (Frame *, JVM *);
void invokestatic (Frame *, JVM *);
void invokeinterface (Frame *, JVM *);
void invokedynamic (Frame *, JVM *);
void _new (Frame *, JVM *);
void newarray (Frame *, JVM *);
void anewarray (Frame *, JVM *);
void arraylength (Frame *, JVM *);
void athrow (Frame *, JVM *);
void checkcast (Frame *, JVM *);
void instanceof (Frame *, JVM *);
void monitorenter (Frame *, JVM *);
void monitorexit (Frame *, JVM *);
void wide (Frame *, JVM *);
void multianewarray (Frame *, JVM *);
void ifnull (Frame *, JVM *);
void ifnonnull (Frame *, JVM *);
void goto_w (Frame *, JVM *);
void jsr_w (Frame *, JVM *);
void breakpoint (Frame *, JVM *);
void impdep1 (Frame *, JVM *);
void impdep2 (Frame *, JVM *);
